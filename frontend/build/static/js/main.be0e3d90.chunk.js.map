{"version":3,"sources":["components/PostList/styles.js","utils/api.js","hooks/PostProvider.js","components/PostList/index.js","components/Home.js","components/PostView/styles.js","components/PostView/index.js","components/PostEditor/styles.js","components/PostEditor/index.js","components/AdminHeader/styles.js","components/AdminHeader/index.js","components/Admin.js","components/Header/styles.js","components/Header/index.js","styles/global.js","App.js","reportWebVitals.js","index.js"],"names":["Container","styled","div","LoadingContent","TitleContent","Title","get","path","a","fetch","response","json","console","error","savePost","data","requestOptions","method","headers","body","JSON","stringify","deletePost","PostContext","createContext","PostProvider","children","useState","post","setPost","Provider","value","handleSelectPost","postSelected","usePost","useContext","PostList","isFetching","setIsFetching","posts","setPosts","view","setView","location","useLocation","history","useHistory","fetchPosts","useEffect","pathname","handleNavigate","url","push","handleDelete","id","color","height","width","length","map","title","onClick","category","name","_id","remarkPlugins","remarkMath","rehypePlugins","rehypeRaw","content","Home","PostView","EditionContainer","Category","select","CalendarArea","input","props","css","Content","textarea","SaveButton","button","Error","p","PostEditor","setTitle","setContent","setCategory","setError","setId","Date","date","setDate","created_at","handleSavePost","onChange","e","target","placeholder","defaultValue","AdminHeader","to","Admin","exact","Header","createGlobalStyle","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.be0e3d90.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n    width: 80%;\n    margin: 0 auto;\n    padding:20px;\n`;\nexport const LoadingContent = styled.div`\nwidth:100%;\ndiv {\n    margin: auto auto;\n}\n\n`\nexport const TitleContent = styled.div`\n    display:flex;\n    flex-direction:row;\n    justify-content:space-between;\n    align-items:center;\n    a{\n        background: #e2e2e2;\n        padding:5px;\n        \n        border-radius:6px;\n        :hover {\n            color:#fff;\n        }\n    }\n    button{\n        background: #e2e2e2;\n        padding:5px;\n        border:none;\n        border-radius:6px;\n        :hover {\n            color:#fff;\n        }\n        margin-left:5px;\n    }\n`;\nexport const Title = styled.div`\n    text-align:center;\n    font-weight:bold;\n    font-size:20px;\n`;","async function get(path) {\n  try {\n    const response = await fetch(path);\n\n    return response.json();\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nasync function savePost(path, data) {\n  const requestOptions = {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify(data)\n};\n  try {\n    const response = await fetch(path, requestOptions);\n\n    return response.json();\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nasync function deletePost(path) {\n  const requestOptions = {\n    method: 'DELETE',\n    headers: { 'Content-Type': 'application/json' },\n};\n  try {\n    const response = await fetch(path, requestOptions);\n    return response.json();\n  } catch (error) {\n    console.error(error);\n  }\n}\nexport {\n  get, \n  savePost,\n  deletePost\n};\n","import React, {useContext, createContext, useState} from 'react';\n\nconst PostContext = createContext();\n\nconst PostProvider = ({children}) =>{\n    const [post, setPost] = useState(null);\n\n    const handleSelectPost = (postSelected)=>{\n        setPost(postSelected);\n    }\n\n    return (\n        <PostContext.Provider\n        value={\n            {\n                post,\n                handleSelectPost\n            }\n        }\n        >\n            {children}\n        </PostContext.Provider>\n    )\n\n}\n\nfunction usePost(){\n    const context = useContext(PostContext);\n    return context;\n}\n\nexport {PostProvider, usePost}","import React, { useEffect, useState } from 'react';\nimport ReactMarkdown  from 'react-markdown';\nimport {Link, useLocation, useHistory} from 'react-router-dom';\nimport { Container,LoadingContent, TitleContent, Title } from './styles';\nimport { get, deletePost } from '../../utils/api.js'\nimport rehypeRaw from 'rehype-raw'\nimport remarkMath from 'remark-math'\nimport { usePost } from '../../hooks/PostProvider.js';\nimport ReactLoading from 'react-loading';\nconst PostList = () => {\n\n    const [isFetching, setIsFetching] = useState(true);\n    const [posts, setPosts] = useState([]);\n    const [view,setView] = useState(true);\n    const location = useLocation();\n    const history = useHistory();\n    const { handleSelectPost } = usePost();\n    \n\n    const fetchPosts = async () =>{\n        const posts = await get('/api/posts');\n        setPosts(posts);\n        setIsFetching(false);\n    }\n    \n    useEffect(() => {\n        if(location.pathname === \"/admin/list\"){\n            setView(false);\n        }\n      fetchPosts();\n    }, [location.pathname ]);\n\n    const handleNavigate = (url, data) =>{\n        handleSelectPost(data);\n        history.push(\n            {\n                pathname: url,\n                \n            })\n    }\n\n    const handleDelete = async (id)=>{\n        setIsFetching(true);\n        await deletePost(`/api/posts/${id}`);\n        handleSelectPost(null);\n        await fetchPosts();\n      }\n\n    const renderPosts = () =>{\n        if(posts.length<=0) return <Title>No posts created</Title>;\n        \n        return posts.map((post)=>(\n        <Container key={post._id}>\n            <TitleContent>\n                <span></span>\n                <Title>\n                    {post.title}\n                </Title>\n                {view ?\n                    <Link\n                    onClick={()=>handleNavigate(`/${post.category.name}/${post.title}`, post)}\n                   \n                    >\n                        View\n                    </Link>\n                :\n                    <div>\n                        <Link \n                        onClick={()=>handleNavigate(\"/admin/edit\", post)}\n                    \n                        >\n                            Edit\n                        </Link>\n                        <button onClick={()=>handleDelete(post._id)}>\n                            Delete\n                        </button>\n                    </div>\n                }\n                \n            </TitleContent>\n            <ReactMarkdown \n          \n            remarkPlugins={[remarkMath]}\n            rehypePlugins={[rehypeRaw]} children={post.content} />\n        </Container>\n        ));\n\n    }\n  return (\n      isFetching ?\n      <LoadingContent >\n        <ReactLoading color=\"#ff7\" height={'10%'} width={'10%'} /> \n      </LoadingContent> :\n      renderPosts()\n  )\n}\n\nexport default PostList\n\n","import { useState, useEffect } from 'react';\nimport PostList from './PostList';\n\nfunction Home() {\n  return <PostList />;\n  \n}\n\nexport default Home;","import styled from 'styled-components';\n\nexport const Container = styled.div`\n    width: 80%;\n    margin: 0 auto;\n    padding:20px;\n`;\nexport const TitleContent = styled.div`\n    display:flex;\n    flex-direction:row;\n    justify-content:center;\n    align-items:center;\n    a{\n        background: #e2e2e2;\n        padding:5px;\n        border-radius:6px;\n        :hover {\n            color:#fff;\n        }\n    }\n`;\nexport const Title = styled.div`\n    text-align:center;\n    font-weight:bold;\n    font-size:20px;\n`;","import React from 'react';\nimport ReactMarkdown  from 'react-markdown';\nimport { Container, TitleContent, Title } from './styles';\nimport { usePost } from '../../hooks/PostProvider';\nimport rehypeRaw from 'rehype-raw'\nimport remarkMath from 'remark-math'\nconst PostView = () => {\n\n     \n    const { post } = usePost();\n \n    const renderPost = () =>{\n       \n        return (\n        <Container>\n            <TitleContent>\n                <Title>\n                    {post.title}\n                </Title>\n            </TitleContent>\n            <ReactMarkdown \n            remarkPlugins={[remarkMath]}\n            rehypePlugins={[rehypeRaw]} \n            children={post.content} />\n        </Container>\n        );\n\n    }\n  return (\n      post ? renderPost() : null\n      \n  )\n}\n\nexport default PostView\n\n","import styled, { css } from 'styled-components';\n\nexport const Container = styled.div`\n    display:flex;\n    justify-content:center;\n    height:80vh;\n`\nexport const LoadingContent = styled.div`\nwidth:100%;\ndiv {\n    margin: auto auto;\n}\n\n`\nexport const EditionContainer = styled.div`\n    display:flex;\n    border: 1px solid #e2e2e2;\n    border-radius:6px;\n    box-shadow:0px 1px 3px 0px;\n    padding: 30px;\n    width: 500px;\n    height:100%;\n    flex-direction:column;\n    align-items:flex-start;\n    justify-content:space-between;\n    margin: 10px 0;\n    p{\n        margin:10px 0;\n    }\n\n   \n`;\n\nexport const Category = styled.select`\n    margin: 8px 0;\n    border: 1px solid #eee;\n    padding: 8px;\n    border-radius: 4px;\n    font-size: 17px;\n    width: 300px;\n\n    :hover{\n        border: 1px solid #ddd;\n    }\n   \n`;\n\nexport const CalendarArea = styled.div`\n    border: 1px solid #e2e2e2;\n    border-radius:6px;\n    box-shadow:0px 1px 3px 0px;\n    padding: 30px;\n    width: 500px;\n    height:100%;\n    flex-direction:column;\n    align-items:flex-start;\n    justify-content:space-between;\n    margin: 10px 0; \n`\nexport const Title = styled.input`\n    margin: 8px 0;\n    width:220px;\n    border: 1px solid #eee;\n    padding: 8px;\n    border-radius: 4px;\n    font-size: 17px;\n    margin-right:20px;\n    :hover{\n        border: 1px solid #ddd;\n    }\n    ${props=>props.error && css`\n        border: 1px solid red;\n    `}\n`;\n\nexport const Content = styled.textarea`\n    width:100%;\n    height:100%;\n    resize:none;\n    border: 1px solid #eee;\n    outline:none;\n    font-size:17px;\n    ${props=>props.error && css`\n        border: 1px solid red;\n    `}\n`;\n\n\nexport const SaveButton = styled.button`\ndisplay: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 15px;\n  color: #fff;\n  background: #C2C2C2;\n  width: 142px;\n  height: 36px;\n  border: none;\n  padding: 8px;\n  margin: 10px 0;\n  border-radius: 4px;\n  font-weight: bold;\n\n  :hover {\n    background: #e2e2e2;\n  }\n`;\n\nexport const Error = styled.p`\n    color:#fff;\n    background-color:red;\n    padding:5px;\n    border-radius:4px;\n    width:100%\n`","import React, {useState, useEffect} from 'react';\nimport { Container, LoadingContent, EditionContainer, Category, Title , CalendarArea, Content, SaveButton, Error} from './styles';\nimport { useHistory } from \"react-router-dom\";\nimport Calendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css';\nimport { usePost } from '../../hooks/PostProvider';\nimport { savePost } from '../../utils/api.js'\nimport ReactLoading from 'react-loading';\n\nfunction PostEditor() {\n  const [isFetching, setIsFetching] = useState(false);\n  const [title, setTitle] = useState('');\n  const [content, setContent] = useState('');\n  const [category, setCategory] = useState('Technology')\n  const [error,setError] = useState(false);\n  const [id,setId] = useState(null);\n  const [date, setDate] = useState(new Date());\n  const history = useHistory();\n\n  const { post } = usePost();\n\n  useEffect(()=>{\n    \n    if(post){\n      setTitle(post.title);\n      setContent(post.content);\n      setCategory(post.category.name);\n      setId(post._id);\n      if(post.created_at){\n        setDate(new Date(post.created_at));\n      }\n    }\n  },[post])\n\n \n  const handleSavePost =async () =>{\n   \n    setError(false);\n    if(title.length <=0 || content.length <=0){\n      setError(true);\n    }else{\n      setIsFetching(true);\n      await savePost('/api/posts/create', {\n        title,\n        content,\n        category,\n        id,\n        date\n      });\n      \n\n      setTitle('');\n      setContent('');\n      setDate(new Date());\n      history.push('/admin/list');\n    }\n\n   \n      \n  }\n\n  return (\n    isFetching ?\n    <LoadingContent >\n    <ReactLoading color=\"#ff7\" height={'10%'} width={'10%'} /> \n  </LoadingContent>\n  :\n    <Container>\n      <EditionContainer >\n       <p>Category</p>\n        <Category \n          value={category}\n          onChange={(e)=>setCategory(e.target.value)} >\n          <option>Technology</option>\n          <option>Travel</option>\n          <option>Car</option>\n          <option>Sport</option>\n        </Category>\n        <p>Title</p>\n        <Title \n          value={title}\n          error={error}\n          placeholder=\"Title\"  \n          onChange={(e)=>setTitle(e.target.value)} \n        />\n        <p>Markdown Content</p>\n        <Content\n          value={content}\n          error={error}\n          onChange={(e)=>setContent(e.target.value)}\n        ></Content>\n        <SaveButton \n          onClick={handleSavePost}\n        > \n          Save\n        </SaveButton>\n        {error ? <Error>All fields are required!</Error> :null}\n      \n    </EditionContainer>\n    <CalendarArea>\n        <p>Creation Date</p>\n        <Calendar\n        value={date}\n        onChange={setDate}\n        defaultValue={date}\n        />\n        </CalendarArea>\n    </Container>\n    \n  )\n}\n\nexport default PostEditor;","import styled from  'styled-components'\n\nexport const Container = styled.div`\n   background: #fff;\n   color:#444;\n`;\n\nexport const Content = styled.div`\n  height: 58px;\n  display:flex;\n  justify-content: center;\n  align-items:center;\n  background-color: rgb(45.6%, 45.6%, 49.1%);\n  a{\n      padding:5px;\n      border-radius:6px;\n      color:#444;\n      text-decoration:none;\n      font-weight:bold;\n      background-color: rgb(25.6%, 45.6%, 49.1%);\n    }\n  nav{\n    display:flex;\n    justify-content:center;\n    align-items:center; \n    margin:10px;\n    \n  \n  }\n  aside{\n   \n    display:flex;\n    justify-content:center;\n    align-items:center;\n    margin-right:20px;\n }\n`;\n","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport { usePost } from '../../hooks/PostProvider';\n\nimport {Container, Content,} from './styles';\nexport default function AdminHeader() {\n  const { handleSelectPost } = usePost()\n  return (\n    <Container>\n      <Content>\n        <nav>\n          <Link to='/admin/create'\n          onClick={()=>handleSelectPost(null)}\n          >Create a Post</Link>\n        </nav>\n        <section>\n        <Link to='/admin/list'>List Post</Link>\n        </section>\n     \n      </Content>\n    </Container>\n  );\n}","import React from 'react';\nimport PostEditor from './PostEditor';\nimport PostList from './PostList';\nimport AdminHeader from './AdminHeader';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\nfunction Admin() {\n  return (\n    <Router>\n      <AdminHeader />\n      \n      <Switch>\n       \n        <Route exact path=\"/admin/list\">\n          <PostList />\n        </Route>\n        <Route path=\"/admin/create\">\n          <PostEditor />\n        </Route>\n        <Route path=\"/admin/edit\">\n          <PostEditor />\n        </Route>\n      </Switch>\n     \n    </Router>\n  );\n}\n\nexport default Admin;\n","import styled from  'styled-components'\n\nexport const Container = styled.div`\n   background: #444;\n   color:#fff;\n`;\n\nexport const Content = styled.div`\n  height: 58px;\n  display:flex;\n  justify-content: center;\n  a{\n      padding:5px;\n      border-radius:6px;\n      color:#fff;\n      text-decoration:none;\n      font-weight:bold;\n      background-color: rgb(45.6%, 45.6%, 49.1%);\n    }\n  nav{\n    display:flex;\n    justify-content:center;\n    align-items:center; \n    margin:10px;\n    \n  \n  }\n  aside{\n   \n    display:flex;\n    justify-content:center;\n    align-items:center;\n    margin-right:20px;\n }\n`;\n","import React from 'react';\nimport {Link} from 'react-router-dom';\n\nimport {Container, Content,} from './styles';\nexport default function Header() {\n\n  return (\n    <Container>\n      <Content>\n        <nav>\n          <Link to='/'>POSTS</Link>\n        </nav>\n\n        <aside>\n            <Link to=\"/admin\">ADMIN</Link>\n        </aside>\n      </Content>\n    </Container>\n  );\n}","import { createGlobalStyle } from 'styled-components';\n\nexport default createGlobalStyle`\n@import url('https://fonts.googleapis.com/css?family=Roboto:400,700&display=swap');\n*{\n  margin:0;\n  padding:0;\n  outline:0;\n  box-sizing: border-box;\n}\n*:focus{\n  outline:0;\n}\nhtml, body, #root{\n  height:100%;\n}\nbody{\n  -webkit-font-smoothing:antialiased;\n}\nbody, input, textarea, button{\n  font:14px 'Roboto', sans-serif;\n}\na{\n  text-decoration:none;\n  \n}\na, button{\n  cursor: pointer;\n}\n`;","import {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport Home from './components/Home.js';\nimport PostView from './components/PostView';\nimport Admin from './components/Admin.js';\nimport Header from './components/Header';\nimport GlobalStyles from './styles/global';\nimport { PostProvider } from './hooks/PostProvider.js';\n\nfunction App() {\n  return (\n    <PostProvider>\n    <Router>\n      <Header />\n      <Switch>\n        <Route exact path=\"/\">\n          <Home />\n        </Route>\n        <Route \n          exact \n          path=\"/:category/:title\"\n          \n        >\n          <PostView />\n        </Route>\n        <Route path=\"/admin\">\n          <Admin />\n        </Route>\n      </Switch>\n      <GlobalStyles />\n      \n    </Router>\n    </PostProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}